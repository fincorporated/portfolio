export const entries = [{
    id: 0,
    relativeDate: 'Week 1',
    date: 'May 27th',
    content: ["This is the first entry of the Blog fincorportated (get it? like incorporated plus my name-Fin, I thought it was clever). I’m using this blog to fill any gaps of information I want to share on this site that have no other place, and to document my journey of learning software development.", "So to catch the Blog up on that journey, I guess it started with the weather. And smart home automation. After years of Google Home’s declining quality I stumbled upon Home Assistant (the tale as old as time). Despite having no experience with screen-less computers, for Christmas I requested a Raspberry Pi and a tutorial from my step-dad, and as soon as I returned from holiday travels, I was up and running.", "At the same time, I was on month too-many of trying to decide what my next move was in my career. Sales was starting to wear on me, but working with Salesforce had started to inspire an interest in… “systems” is the best word I’ve ever had to describe it. Cleaning up data (and ours required a lot of cleaning) and learning how to use the tools to find and manipulate it was scratching a problem-solving itch I’ve always had (ever try logic puzzles?) in a brand new way.", "I went through a good chunk of the free Trailhead courses on Salesforce Administration, and I was liking it, but was starting to get more interested in doing something with the data, which got me into Tableau. Tableau led me to the beginning of a Google Data Analytics Course, which was really helpful in realizing the kinds of problems data analysts are tackling take a long time and a lot of people to eventually be “solved”. I’m glad there are people out there doing that, but it was not sparking joy, as some might say.", "Enter a common daily problem, which I’ve read is the best way to get started in coding, I hope it’s true. I live near the ocean, which is lovely, but makes the weather quite variable with the wind factor. Between that and the general level of inaccuracy of some of these weather services, the weather forecast I was getting in Home Assistant was not feeling right. Then I discovered WeatherUnderground, a GREAT source of hyper local weather data because it allows users to connect their Personal Weather Stations. It also allows broke users without PWS’s to view the weather data from nearby stations. This seems like a great solution, and to my delight it seemed Weatherunderground had an API I could use to connect to Home Assistant! But alas, I discovered that the precious API is only for PWS owners.", "I started off googling, eventually got to chatGPT which pointed me toward web scraping. Initially I thought getting this data could make for a great data analysis project that could get me excited about that work again, so I let chatGPT write me some code to get the data scraping. But by the time I was done troubleshooting what the machine spit out to me enough to actually get everything working, I was hooked. I decided to go back to the beginning, and found myself learning the classic web trio, HTML, CSS, and JavaScript.", "From there I’ve continued to fall down a rabbit hole of languages to learn and projects to build and at the bottom realized I had enough interest to fuel a career. So that’s what I’m setting off to get now!", "This first blog has turned out MUCH longer than I anticipated, so I’ll leave it there.",]
}, {
    id: 1,
    relativeDate: 'Week 2',
    date: 'June 22nd',
    content: ["To BE* or Not To BE*",  "(*Back end)", "That is the question. Whether ‘tis nobler in the mind to suffer the slings and arrows of outrageous front ends, or to take arms against a sea of indefinite unemployment (because how many companies are looking to hire a career-changing, portfolio-only, entry-level back-end developer?)", "Though silly as this satirical soliloquy may be, it’s a pretty accurate representation of my internal monologue over the past couple weeks. As I’ve been learning more about software development and working on my projects, I’ve discovered that what feels most exciting to work through is not creating a user-friendly, good-looking website, but instead it’s the moment I see the data I’m trying to get from an API finally show up, or [Object object] turns into the actual information I know is inside an object inside an array that’s inside another object. Information from one place showing up somewhere else, as simple as it is compared to the many feats that are achieved through programming, absolutely delights me.", "In many ways, this is great! I’m happy to be discovering the specific kinds of programming challenges that are most enticing, this is how one decides what to pursue. However my initial hesitation to dive into the back end, born from a lack of confidence in the existence of entry-level back-end developer jobs, seems to be rather founded. Based on any job boards I’ve searched, the most common positions that are open to early career coders are front-end positions.", "-ay, there’s the rub: everyone and their mother is learning front-end development and competing for those entry level positions. I know I’m up against steep and plentiful competition- that’s the job market and I’m not naive to it. I’m prepared to compete! But I’m starting to wonder if my competitive edge will be as… sharp… as necessary if I know in the back of my mind that I’d rather be doing something else.", "According to the course I initially charted for myself (that theoretically ends with a programming position as soon as possible and assumes front-end development is the most likely category of job I could get), I should be churning out React projects, learning Tailwind, practicing JavaScript challenges. What I want to do though? Hooking up a database to my Short or Long Sleeves project so it can start saving user preferences. Learn how to set up a server and create my own API to send and receive information from my Home Assistant. Abandon JavaScript for now and learn Python!", "In the end though, I don’t need to consult ChatGPT to know I should take a middle path. I’ve read enough programming-specific advice to know that learning any object oriented language helps me to think like a programmer and lets me practice the basics of problem-solving with code. And I’ve acquired enough new skills in my life to know that attempting to learn too many things at the same time will only slow down my development of any skill. So for now I will continue to do codewars (and eventually leetcode) problems in JavaScript, I’ll create my projects using HTML/CSS/Vanilla JS and React when needed, and I’ll learn enough about typography and basic CSS frameworks to make those projects decent looking. I will do my best to make back-end-less projects until I feel ready to move onto a new skill, at which point I’ll tackle node.js! I think it’s a good plan, not so good it suddenly makes me a more patient person, but good."],
}, {
    id: 2,
    relativeDate: 'Week 3',
    date: 'July 7th',
    content: ["Beach Day", "I’ve just added my most recent project to my portfolio, which I’ve been calling ‘Beach Day’. It’s similar to another project of mine, ‘Short or Long Sleeves?’ in that it answers a question based on the weather. This time the question in question is ‘Is today a beach day?’.", "This was initially created for a trip to Martha’s Vineyard, to give the group a way to quickly see if the beach was an option for the day. And in the original version, the displayed forecast covered the entire week we would be on the Vineyard, giving us an at-a-glance page of our potential future beach days. However, the version presented in my portfolio is an entirely different repository from that project because I f-ed up the scalability so badly.", "To back up a bit, before I even got to the point of pretty much rebuilding from scratch, I had already learned a lot (read: made so many mistakes) on this project. The primary practice was in arrays and objects- arrays inside objects, objects inside arrays, objects inside arrays inside arrays inside an object, you get the idea. The variety in practice was doubled by way of my first lesson learned: Give the data you’re getting from that API a good look before you build the project around its structure! I started off using the open-meteo API, appreciating the expansive set of data offered, but after getting the whole project up and running, realized the forecast was entirely inaccurate when compared to what I could see with my eyes. So I started over with the National Weather Service API, which offers less forecast information, which I was willing to sacrifice, and has a different data structure, which I was willing to see as an opportunity, not a huge pain in the ass.", "In all seriousness, I did feel good about getting to flex the muscle and practice writing more code. And working with those giant arrays and deeply nested objects was made much easier after practicing with codewars, which made me feel even more confident in the value of doing isolated challenges like that, beyond practicing for coding interviews.", "But none of that explains why I had to go full nuke on the project and start over, which brings me to the second lesson I learned: NEVER even in early proof of concept iterations, hard code anything that will eventually be variable. The most egregious example of this mistake was IDing the tables in my HTML file with the days of the month I was initially tracking weather for. Yes, the main point of version one was to display the forecast and answer the question, and sure this sped things up, but boy were the decisions I made for speed at the beginning a pain to fix later. The code was so tangled up in specifics, from dates to locations to tide stations, it was not worth salvaging. A few lines got copy-pasted into V2, but for the most part, it’s all new.", "So if you do give it a try, I urge you to really appreciate the amount of unnecessary time and effort that went into it, and point and laugh at me in your head."],
}, {
    id: 3,
    relativeDate: 'Week 4',
    date: 'June 14th',
    content: '',
}, {
    id: 4,
    relativeDate: 'Week 5',
    date: 'June 21st',
    content: '',
}, {
    id: 5,
    relativeDate: 'Week 4',
    date: 'June 14th',
    content: '',
}



]